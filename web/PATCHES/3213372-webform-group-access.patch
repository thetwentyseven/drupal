diff --git a/modules/webform_group/src/WebformGroupManager.php b/modules/webform_group/src/WebformGroupManager.php
index 93b69c00c..df24de24b 100644
--- a/modules/webform_group/src/WebformGroupManager.php
+++ b/modules/webform_group/src/WebformGroupManager.php
@@ -2,10 +2,13 @@
 
 namespace Drupal\webform_group;
 
+use Drupal\Component\Render\FormattableMarkup;
 use Drupal\Core\Session\AccountInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
+use Drupal\group\Entity\Group;
 use Drupal\group\Entity\GroupContentInterface;
+use Drupal\group\Entity\GroupInterface;
 use Drupal\webform\EntityStorage\WebformEntityStorageTrait;
 use Drupal\webform\WebformAccessRulesManagerInterface;
 use Drupal\webform\WebformInterface;
@@ -137,11 +140,43 @@ class WebformGroupManager implements WebformGroupManagerInterface {
       return $this->currentGroupRoles;
     }
 
-    $group_content = $this->getCurrentGroupContent();
-    $this->currentGroupRoles = ($group_content) ? $this->getUserGroupRoles($group_content, $this->currentUser) : [];
+    $group = $this->getCurrentGroup();
+    $this->currentGroupRoles = ($group) ? $this->getUserGroupRoles($group, $this->currentUser) : [];
     return $this->currentGroupRoles;
   }
 
+  public function getCurrentGroup() {
+    // Load from group content context if available
+    $group_content = $this->getCurrentGroupContent();
+    if($group_content) {
+      return $group_content->getGroup();
+    }
+  
+    // Load from an entity ref element called 'group' if available
+    $query = \Drupal::request()->get('webform_access_group');
+    if($query) {
+      $group_id = $query;
+      if($group = Group::load($group_id)) {
+        // $link = $group->toLink($group->label(), 'canonical', ['target' => '_blank']);
+        // $message = new FormattableMarkup('This submission is being made for <b>@link</b>', [
+        //   '@link' => $link->toString()
+        // ]);
+        // \Drupal::messenger()->addMessage($message);
+        
+        return $group;
+      }
+    }
+
+    // Load from an entity ref element called 'group' if available
+    $webform_submission = $this->requestHandler->getCurrentWebformSubmission();
+    if($webform_submission) {
+      $group_id = $webform_submission->getElementData('group');
+      if($group = Group::load($group_id)) {
+        return $group;
+      }
+    }
+  }
+
   /**
    * {@inheritdoc}
    */
@@ -257,16 +292,15 @@ class WebformGroupManager implements WebformGroupManagerInterface {
   /**
    * Get current user group roles for group content.
    *
-   * @param \Drupal\group\Entity\GroupContentInterface $group_content
-   *   Group content.
+   * @param \Drupal\group\Entity\GroupInterface $group
+   *   Group.
    * @param \Drupal\Core\Session\AccountInterface $account
    *   A user account.
    *
    * @return array
    *   An array of group roles for the group content.
    */
-  protected function getUserGroupRoles(GroupContentInterface $group_content, AccountInterface $account) {
-    $group = $group_content->getGroup();
+  protected function getUserGroupRoles(GroupInterface $group, AccountInterface $account) {
     $group_type_id = $group->getGroupType()->id();
 
     // Must get implied groups, which includes outsider, by calling
